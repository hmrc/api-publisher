# Copyright 2019 HM Revenue & Customs
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

# This is the main configuration file for the application.
# ~~~~~

appName=api-publisher
appUrl="http://localhost:9603"

include "backend.conf"

# An ApplicationLoader that uses Guice to bootstrap the application.
play.application.loader = "uk.gov.hmrc.play.bootstrap.ApplicationLoader"

# Primary entry point for all HTTP requests on Play applications
play.http.requestHandler = "uk.gov.hmrc.play.bootstrap.http.RequestHandler"

# Provides an implementation of AuditConnector. Use `uk.gov.hmrc.play.bootstrap.AuditModule` or create your own.
# An audit connector must be provided.
play.modules.enabled += "uk.gov.hmrc.play.bootstrap.AuditModule"

# Provides an implementation of MetricsFilter. Use `uk.gov.hmrc.play.bootstrap.graphite.GraphiteMetricsModule` or create your own.
# A metric filter must be provided
play.modules.enabled += "uk.gov.hmrc.play.bootstrap.graphite.GraphiteMetricsModule"

# Provides an implementation and configures all filters required by a Platform backend microservice.
play.modules.enabled += "uk.gov.hmrc.play.bootstrap.MicroserviceModule"
play.http.filters = "uk.gov.hmrc.play.bootstrap.filters.MicroserviceFilters"
# Json error handler
play.http.errorHandler = "uk.gov.hmrc.play.bootstrap.http.JsonErrorHandler"

# Session Timeout
# ~~~~
# The default session timeout for the app is 15 minutes (900seconds).
# Updating this is the responsibility of the app - it must issue a new cookie with each request or the session will
# timeout 15 minutes after login (regardless of user activity).
# session.maxAge=900

# Secret key
# ~~~~~
# The secret key is used to secure cryptographics functions.
# If you deploy your application to several instances be sure to use the same key!
application.secret="vhukJ354UYw2KYOPmwvynrOtuDL1W3ReuDwCh3XV3FUftiSCANpIYgK8tGGuBHdM"

# Session configuration
# ~~~~~
application.session.httpOnly=false

application.session.secure=false

# The application languages
# ~~~~~
application.langs="en"



# Router
# ~~~~~
# Define the Router object to use for this application.
# This router will be looked up first when the application is starting up,
# so make sure this is the entry point.
# Furthermore, it's assumed your route file is named properly.
# So for an application router like `my.application.Router`,
# you may need to define a router file `conf/my.application.routes`.
# Default to Routes in the root package (and conf/routes)
# !!!WARNING!!! DO NOT CHANGE THIS ROUTER
play.http.router=prod.Routes

# Play modules
# ~~~~~
play.modules.enabled += "uk.gov.hmrc.apipublisher.config.Module"

# Controller
# ~~~~~
# By default all controllers will have authorisation, logging and
# auditing (transaction monitoring) enabled.
# The below controllers are the default exceptions to this rule.

controllers {
    com.kenshoo.play.metrics.MetricsController = {
      needsAuth = false
      needsLogging = true
      needsAuditing = false
    }
    uk.gov.hmrc.apipublisher.controllers.PublisherController = {
        needsAuth = false
        needsLogging = true
        needsAuditing = false
    }
}


# Evolutions
# ~~~~~
# You can disable evolutions if needed
# evolutionplugin=disabled

# Metrics plugin settings - graphite reporting is configured on a per env basis
metrics {
    name = ${appName}
    rateUnit = SECONDS
    durationUnit = SECONDS
    showSamples = true
    jvm = true
    enabled = true
}

Stub {
    auditing {
        enabled = false
    }

    mongodb {
        uri = "mongodb://localhost:27017/api-publisher"
    }

    ramlLoaderUrlRewrite {
        from = "https://developer.service.hmrc.gov.uk"
        to = "http://localhost:9680"
    }

    microservice {
        services {
            api-definition {
                host=localhost
                port=11111
            }
            service-locator {
                host = localhost
                port = 11111
            }
            api-scope {
                host = localhost
                port = 11111
            }
        }
    }
}

Test {
    auditing {
        enabled = false
    }

    mongodb {
        uri = "mongodb://localhost:27017/api-publisher"
    }

    ramlLoaderUrlRewrite {
        from = "https://developer.service.hmrc.gov.uk"
        to = "http://localhost:9680"
    }

    microservice {
        services {
            api-definition {
                host=localhost
                port=21111
            }
            service-locator {
                host = localhost
                port = 21113
            }
            api-scope {
                host = localhost
                port = 21114
            }
            api-subscription-fields {
                host=localhost
                port=21115
            }
        }
    }
}

# Microservice specific config

Dev {

    auditing {
        enabled = false
    }

    mongodb {
        uri = "mongodb://localhost:27017/api-publisher"
    }

    ramlLoaderUrlRewrite {
        from = "https://developer.service.hmrc.gov.uk"
        to = "http://localhost:9680"
    }

    microservice {
        metrics {
            graphite {
                host = graphite
                port = 2003
                prefix = play.${appName}.
                enabled = false
            }
        }

        services {
            timeout = 5 seconds

            service-locator {
                host=localhost
                port=9602
            }

            api-definition {
                host=localhost
                port=9604
            }

            api-scope {
                host = localhost
                port = 9690
            }

            api-subscription-fields {
                host=localhost
                port=9650
            }

        }
    }
}

Prod {

}
